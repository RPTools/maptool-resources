import java.text.SimpleDateFormat

buildscript {
    dependencies {
        classpath "org.ajoberstar.grgit:grgit-gradle:4.0.1"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

plugins {
    id "org.ajoberstar.grgit" version "4.0.1"
}

apply plugin: 'java'
apply plugin: 'maven'


project.sourceCompatibility = 1.7
project.targetCompatibility = 1.7

if (version == 'unspecified') {
    //Gets the version name from the latest Git tag
    if (project.hasProperty('buildVersion')) {
        version = buildVersion
    } else {
        def repo = grgit.open(currentDir: project.file('.'))
        def tagName = repo.tag.list().getAt(0).fullName.replace('refs/tags/', '')
        def tagCommit = repo.tag.list().getAt(0).commit.id
        def headCommit = repo.head().id
        def headAbbrvId = repo.head().abbreviatedId

        if (tagCommit == headCommit) {
            version = tagName
        } else {
            println 'No version specified, please specify version with -Pversion=<version>'
            throw new GradleException('No version specified, please specify version with -Pversion=<version>')
        }
    }
}


ext.repo = grgit.open(currentDir: project.file('.'))


configurations {
    deployerJars
}


install {
    repositories.mavenInstaller {
        pom.version = project.version
        pom.artifactId = 'maptool-resources'
        pom.groupId = 'net.rptools.maptool-resources'
    }
}


uploadArchives {
    repositories.mavenDeployer {
        pom.version = project.version
        pom.artifactId = 'maptool-resources'
        pom.groupId = 'net.rptools.maptool-resources'
        configuration = configurations.deployerJars
        repository url: 'file://' + projectDir + '/../maven-repo'
    }
}


dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

ext.compileDate = new Date()
ext.yyyymmdd = (new SimpleDateFormat('yyyyMMDD')).format(ext.compileDate)


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'http://maptool.craigs-stuff.net/repo/'
    }
}


task zipResources(type: Zip) {
    from 'src/main/resources'
    into ''
    archiveFileName = 'default_images.zip'
    destinationDirectory = new File(projectDir, 'build')
    outputs.upToDateWhen {
        false
    }
}


task showBuildVersion() {
    doLast {
        println 'Build Version Number = ' + project.version
    }
}

jar {
    from 'build'
    include 'default_images.zip'
    manifest {
        attributes 'Implementation-Title': 'maptool-resources',
                'Implementation-Version': project.version,
                'Class-Path'
    }
}
jar.dependsOn += zipResources

